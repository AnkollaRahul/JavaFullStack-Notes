Right Side Elements
====================
1)
      1
    2 2 
  3 3 3 
4 4 4 4

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}
	}
}


2)
4 4 4 4   
  3 3 3 
    2 2 
      1

ex:

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=4;i>=1;i--)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}
	}
}

3)
      *
    * *
  * * *
* * * *
  * * *
    * * 
      * 


class Test 
{
	public static void main(String[] args) 
	{
		//ascending 
		//rows
		for(int i=1;i<=4;i++)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println("");
		}

		//descending
		//rows
		for(int i=3;i>=1;i--)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println("");
		}
	}
}

Pyramids 
========
1)
      1 
    1 2 1
  1 2 3 2 1
1 2 3 4 3 2 1

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}
			//left side element
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}
			//right side elements
			for(int j=i-1;j>=1;j--)
			{
				System.out.print(j+" ");
			}

			//new line
			System.out.println("");
		}
	}
}

2)

1 2 3 4 3 2 1
  1 2 3 2 1 
    1 2 1 
      1

ex:

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=4;i>=1;i--)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}
			//left side element
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}
			//right side elements
			for(int j=i-1;j>=1;j--)
			{
				System.out.print(j+" ");
			}

			//new line
			System.out.println("");
		}
	}
}

3)
      * 
    * * *
  * * * * * 
* * * * * * * 
  * * * * *
    * * * 
      * 

ex:
class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}
			//left side element
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//right side elements
			for(int j=i-1;j>=1;j--)
			{
				System.out.print("* ");
			}

			//new line
			System.out.println("");
		}

		//descending
		//rows
		for(int i=3;i>=1;i--)
		{
			//space
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}
			//left side element
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//right side elements
			for(int j=i-1;j>=1;j--)
			{
				System.out.print("* ");
			}

			//new line
			System.out.println("");
		}
	}
}

Interview Question
--------------------
Q)Write a java program to display below loop pattern?

1             1
1 2         2 1 
1 2 3     3 2 1 
1 2 3 4 4 3 2 1

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int rows=4;
		
		//rows
		for(int i=1;i<=rows;i++)
		{
			//left side elements
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}
			//space 
			for(int j=1;j<=(rows-i)*2;j++)
			{ 
				System.out.print("  ");
			}
			//right side elements
			for(int j=i;j>=1;j--)
			{
				System.out.print(j+" ");
			}
			//new line
			System.out.println("");
		}

	}
}

Q)Write a java program to display below loop pattern?

1
2 1 
1 2 3
4 3 2 1 

ex:

class Test 
{
	public static void main(String[] args) 
	{
		int rows=4;
		
		for(int i=1;i<=rows;i++)
		{
			if(i%2==0)
			{
				for(int j=i;j>=1;j--)
				{
					System.out.print(j+" ");
				}
			}
			else
			{
				for(int j=1;j<=i;j++)
				{
					System.out.print(j+" ");
				}
			}
			//new line
			System.out.println("");
		}

	}
}

4)Jump Statement
=================
Jump statement is used to jump from one section of code to another section.

We have two jump statements in java.

i) break statement 

ii) continue statement 
	 

i) break statement 
-----------------
It is used to break the execution of loops and switch case.

For conditional statement we can use if condition.

syntax:
	break; 

ex:1
-----
class Test 
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		break;
		System.out.println("stmt2");
	}
}
o/p:
	break outside switch or loop

ex:2
-----
class Test 
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		if(true)
		{
			break;
		}
		System.out.println("stmt2");
	}
}
o/p:
	break outside switch or loop


ex:3
-----
class Test 
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				break;
			}
			System.out.print(i+" ");//1 2 3 4
		}
	}
}

ii) continue statement 
--------------------
It is used to continue the execution of loops.

For conditional statements we can use if condition.

syntax:
	continue;

ex:1
----
class Test 
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		continue;
		System.out.println("stmt2");
	}
}
o/p:
	continue outside of loop

ex:2
----
class Test 
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		if(true)
		{
			continue;
		}
		System.out.println("stmt2");
	}
}
o/p:
	continue outside of loop

ex:3
------
class Test 
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				continue;
			}
			System.out.print(i+" ");//1 2 3 4 6 7 8 9 10
		}
	}
}


Interview Program
-----------------
Q)Write a java program to display reverse of a given number in words?

input:
	123
output:
	ThreeTwoOne 


ex:
import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();

		while(n>0)
		{
			switch(n%10)
			{
				case 0 : System.out.print("Zero");break;
				case 1 : System.out.print("One");break;
				case 2 : System.out.print("Two");break;
				case 3 : System.out.print("Three");break;
				case 4 : System.out.print("Four");break;
				case 5 : System.out.print("Five");break;
				case 6 : System.out.print("Six");break;
				case 7 : System.out.print("Seven");break;
				case 8 : System.out.print("Eight");break;
				case 9 : System.out.print("Nine");break;
			}
			n=n/10;
		}
	}
}

Assignment 
===========
Write a java program to display sum of digits of a given number and display 
in reverse order?

input:
	987  

output:
	42


Arrays
=======
A normal variable we can store only one value at a time.

Inorder to store more then one value in a single variable then we need to use arrays.

Array is a collection of homogeneous data elements.

The main advantages of arrays are 

1) We can represent multiple elements using single variable name.
   ex:
	int[] arr={10,20,30};

2) Performance point of view arrays are recommanded to use.

The main disadvantages of arrays are.

1) Arrays are fixed in size once if we create an array there is no chance 
   of increasing or decreasing the size of an array.

2) To use array concept in advanced we should know what is the size of an 
   array which is always not possible.

In java, arrays are divided into three types.

1)Single dimensional array 

2)Double dimensional array / two dimensional array 

3)Multi dimensional array / three dimensional array 


Array declaration
----------------
At the time of array declaration we should not specify array size.

				Arrays
	|-------------------------|----------------------------|
Single dimensional array    Double dimensional array    Multidimensional array

int[]  arr;			int[][] arr;		int[][][] arr;
int   []arr;			int  [][]arr;		int  [][][]arr;
int   arr[];			int  arr[][];		int  arr[][][];
				int[]  []arr;		int[][]  []arr;
				int[]  arr[];		int[][] arr[];
				int   []arr[];		int[] [][]arr;
							int[]  arr[][];
							int[]  []arr[];
							int   [][]arr[];
							int  []arr[][];










































































































































