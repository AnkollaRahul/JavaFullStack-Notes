Recursion In Java
==================
A method which called itself for many number of times is called recursion.

Recursion is similar to loopings.

Whenever we use recursion, we should not use loops.


Q) Write a java program to perform sum of two numbers without using arithmetic    operator ?


import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		System.out.println("sum of two numbers is ="+sum(a,b));
	}
	//callie method
	public static int sum(int a,int b)
	{
		if(a==0)
			return b;

		return sum(--a,++b);
	}
}

Q)Write a java program to display 10 natural numbers without using loops?

class Test 
{
	public static void main(String[] args) 
	{
		//caller
		display(1);
	}
	//callie method
	public static void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" ");
			display(i+1);
		}
	}
}

Q)Write a java program to display Nth element of fibonacci series ? 

fibonacci series : 0 1 1 2 3 5 8 

input:
	4

output:
	2  

ex:
----
import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number : ");
		int n=sc.nextInt();//4
		
		//caller method
		System.out.println("Nth element of fibonacci series is ="+fib(n));
	}
	//callie method
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;
		if(n==2)
			return 1;

		return fib(n-1)+fib(n-2);
	}
}

Q)Write a java program to find out factorial of a given number using recursion?

input:
	5

output:
	120 


import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number : ");
		int n=sc.nextInt();//5

		//caller 
		System.out.println(factorial(n));
	}
	//callie method
	public static int factorial(int n)
	{
		if(n<0)
			return -1;

		if(n==0)
			return 1;

		return n*factorial(n-1);

	}
}

Q)Write a java program to check given number is palindrome or not using recursion?

class Test 
{
	public static void main(String[] args) 
	{
		int num=121;
		int original=num;
		int reversed=0;

		//caller method 
		if(isPalindrome(num,original,reversed))
			System.out.println("It is a palindrome number");
		else
			System.out.println("It is not a palindrome number");
	}
	//callie method
	public static boolean isPalindrome(int num,int original,int reversed)
	{
		if(num==0)
			return original==reversed;

		reversed=reversed*10+num%10;

		return isPalindrome(num/10,original,reversed);
	}
}

LOOP Patterns
==============
1)
1 1 1 1 
2 2 2 2
3 3 3 3
4 4 4 4 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print(i+" ");
			}
			//new line 
			System.out.println("");
		}

	}
}


2)
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print(j+" ");
			}
			//new line 
			System.out.println("");
		}

	}
}

3)
* * * * 
* * * *
* * * * 
* * * * 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print("* ");
			}
			//new line 
			System.out.println("");
		}

	}
}

4)
4 4 4 4
3 3 3 3
2 2 2 2
1 1 1 1 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=4;i>=1;i--)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print(i+" ");
			}
			//new line 
			System.out.println("");
		}

	}
}

5)
A A A A 
B B B B
C C C C 
D D D D 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(char i='A';i<='D';i++)
		{
			//cols
			for(char j='A';j<='D';j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}
	}
}

6)
D D D D 
C C C C 
B B B B 
A A A A 

ex:

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(char i='D';i>='A';i--)
		{
			//cols
			for(char j='A';j<='D';j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}
	}
}

7)
* * * * 
*     *
*     *
* * * * 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				if(i==1 || i==4 || j==1 || j==4)
					System.out.print("* ");
				else
					System.out.print("  ");
			}
			//new line
			System.out.println("");
		}
	}
}


8)
* - - - 
- * - - 
- - * -
- - - * 


class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				if(i==j)
					System.out.print("* ");
				else
					System.out.print("- ");
			}
			//new line
			System.out.println("");
		}
	}
}

9)
* - - - *
- * - * - 
- - * - - 
- * - * - 
* - - - *

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=5;i++)
		{
			//cols
			for(int j=1;j<=5;j++)
			{
				if(i==j || i+j==6)
					System.out.print("* ");
				else
					System.out.print("- ");
			}
			//new line
			System.out.println("");
		}
	}
}

10)
    *
    *
* * * * * 
    *
    * 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=5;i++)
		{
			//cols
			for(int j=1;j<=5;j++)
			{
				if(i==3 || j==3)
					System.out.print("* ");
				else
					System.out.print("  ");
			}
			//new line
			System.out.println("");
		}
	}
}

11)

1 1 1
1 0 1 
1 1 1 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=3;i++)
		{
			//cols
			for(int j=1;j<=3;j++)
			{
				if(i==2 && j==2)
					System.out.print("0 ");
				else
					System.out.print("1 ");
			}
			//new line
			System.out.println("");
		}
	}
}

Left Side Loop patterns
=======================
1)
1
2 2 
3 3 3 
4 4 4 4 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}

	}
}

2)
1
1 2 
1 2 3
1 2 3 4

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}
			//new line
			System.out.println("");
		}

	}
}

3)
*
* * 
* * *
* * * * 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println("");
		}

	}
}

4)
4 4 4 4 
3 3 3
2 2 
1

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=4;i>=1;i--)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}

	}
}

5)
* 
* *
* * *
* * * *
* * *
* * 
* 

class Test 
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println("");
		}
		//descending
		//rows
		for(int i=3;i>=1;i--)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println("");
		}

	}
}

6)
1
2 3 
4 5 6
7 8 9 0

class Test 
{
	public static void main(String[] args) 
	{
		int k=1;
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				if(k<=9)
					System.out.print(k++ +" ");
				else
					System.out.println("0 ");
			}
			//new line
			System.out.println("");
		}
		

	}
}

Assignment
==========
Q)Write a java program to display below loop pattern?

2 
3   5 
7   11  13
17  19  23 29


























































































































































































































































































































