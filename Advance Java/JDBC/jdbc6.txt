Working with Date values
==========================
While dealing with DOB,DOA,DOR,DOD and etc we need to insert and retrieve date values.

It is never recommanded to store date values in the form of String because we can't compare two dates.

Every database software supports different date patterns.
ex:
	Oracle - dd-MMM-yy
	MySQL  - yyyy-MM-dd

A java.util.Date class object is not suitable to perform database operation.

A java.sql.Date class object is suitable to perform database operation.

Using simple Statement object we can place date values to query parameters.

To overcome this limitation we need to use PreparedStatement object.

Once JDBC driver will get the date value then it will insert inthe pattern
which is supported by underlying database software.

Standard procedure to insert date
----------------------------------

Diagram: jdbc6.1

With the respect to the diagram:

1) Enduser will pass date value in the form of String.

2) A parse() method of java.text.SimpleDateFormat class converts String date 
   to java.util.Date class object.

3) Our application converts java.util.Date class object to java.sql.Date class
   object.

4) A ps.setDate(-,-) method is used to set date value to query parameter.

5) Once JDBC driver gets date value then it will insert in the pattern  
   which is supported by underlying database software.

emp1 table
============
drop table emp1;
create table emp1(eid number(3),ename varchar2(10),edoj date);


DateInsertApp.java
-------------------
package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Scanner;

public class DateInsertApp {

	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the employee id ");
		int id=sc.nextInt();
		
		System.out.println("Enter the employee name :");
		String name=sc.next();
		
		System.out.println("Enter the employee DOJ(dd-MM-yyyy) :");
		String sdoj=sc.next();
		
		//converting string date to java.util.Date class object
		SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");
		java.util.Date udoj=sdf.parse(sdoj);
		
		//converting util date object to sql date object
		long ms=udoj.getTime();
		java.sql.Date sqldoj=new java.sql.Date(ms);
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		
		String qry="insert into emp1 values(?,?,?)";
		
		PreparedStatement ps=con.prepareStatement(qry);
		
		//set the values
		ps.setInt(1,id);
		ps.setString(2,name);
		ps.setDate(3,sqldoj);
		
		//execute
		int result=ps.executeUpdate();
		
		if(result==0)
			System.out.println("No Record inserted");
		else
			System.out.println("Record inserted");
		
		ps.close();
		con.close();
		
	}

}

DateRetrieveApp.java
--------------------
package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;

public class DateRetrieveApp 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		String qry="select * from emp1";
		ResultSet rs=st.executeQuery(qry);
		while(rs.next())
		{
			int id=rs.getInt(1);
			String name=rs.getString(2);
			java.sql.Date sqldoj=rs.getDate(3);
			
			//converting sql date to util date
			java.util.Date udoj=(java.util.Date)sqldoj;
			
			SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");
			String sdoj=sdf.format(udoj);
		
			System.out.println(id+" "+name+" "+sdoj);
		}
		
		rs.close();
		st.close();
		con.close();
		
		
	}
}

Working with LOB values
=========================
Files are known as LOB's.

We have two types of LOB's.

1)BLOB (Binary Large Object)
----------------------
	ex:
		images,audio,video,avi file and etc. 

2)CLOB (Character Large Object)
------------------------------
	ex:
		text,doc file ,advanced text file and etc.

While dealing with matrimonial applications, job portal applications, profile management applications and etc. we need to insert and retrieve LOB values.

Using simple Statement object we can set LOB values directly to query parameters.We need to take the support of PreparedStatement object.

We can set LOB values to query parameter by using following methods.
ex:
	ps.setBinaryStream(-,-,-) / ps.setBLOB(-,-,-)
	ps.setCharacterStream(-,-,-) / ps.setCLOB(-,-,-)


emp2 table
==========
drop table emp2;

create table emp2(eid number(3),ename varchar2(10), ephoto BLOB);


PhotoInsertApp.java
---------------------
package com.ihub.www;

import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Scanner;

public class PhotoInsertApp {

	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the employee id :");
		int id=sc.nextInt();
		
		System.out.println("Enter the employee name :");
		String name=sc.next();
		
		//locate the file 
		File f=new File("src/com/ihub/www/rock.jpeg");
		FileInputStream fis=new FileInputStream(f);
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		
		String qry="insert into emp2 values(?,?,?)";
		
		PreparedStatement ps=con.prepareStatement(qry);
		
		//set the values
		ps.setInt(1,id);
		ps.setString(2,name);
		ps.setBinaryStream(3,fis,(int)f.length());
		
		//execute
		int result=ps.executeUpdate();
		if(result==0)
			System.out.println("No Record inserted");
		else
			System.out.println("Record inserted");
		
		ps.close();
		con.close();
		
	}

}

PhotoRetrieveApp.java
----------------------
package com.ihub.www;

import java.io.FileOutputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class PhotoRetrieveApp 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="select * from emp2";
		
		ResultSet rs=st.executeQuery(qry);
		
		while(rs.next())
		{
			InputStream is=rs.getBinaryStream(3);
			
			FileOutputStream fos=new FileOutputStream("E:\\IHUB-Training-Batches\\IH-JAVA-024\\praveen.png");
		
			int byteReads=0;
			
			byte[] buff=new byte[255];
			
			while((byteReads=is.read(buff))!=-1)
			{
				fos.write(buff, 0, byteReads);
			}
			
			fos.close();
		}
		
		System.out.println("Please check the location");
		rs.close();
		st.close();
		con.close();
		
	}
}