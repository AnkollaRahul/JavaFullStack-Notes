JSP
===
JSP stands for Java Server Pages.

JSP is a dynamic web resource program which is used to develop web applications.


Limitations with Servlets
==========================
> To work with servlet strong java knowledge is required.

> It is not suitable for non-java programmers.

> It does not give any implicit object.
  (Object which can be used directly without any configuration)

> Configuration of each servlet program in web.xml file is mandatory.

> Handling exceptions are mandatory.

> We can't maintain HTML code and Java Code seperately.


Advantages of JSP 
==================
> To work with JSP strong java knowledge is not required.

> It suitable for java and non-java programmers.

> It supports tag based language.

> It allows us to work with custom tags.
	
> It gives 9 implicit bjects.

> Configuration of each JSP program in web.xml file is optional.

> Handling exceptions are optional.

> We can maintain HTML code and Java code seperately.

> It gives all the features of Servlets.

First web application development having JSP program as web resource program
==========================================================================

Deployment Directory structure
----------------------------
JspApp1
|
|---Java Resources
|	
|---Web Content
	|
	|---ABC.jsp
	|
	|---WEB-INF
		|
		|----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.



Note:
-----
In order to see the output in JSP we need to replace ecj-4.4.2 jar file inside 
"Tomcat/lib" folder.

Download link: http://www.java2s.com/example/jar/e/download-ecj442jar-file.html

ABC.jsp
-------
<center>
	<h1>
		
		Current Date and Time : <br> 
	    
	    <%
	    	java.util.Date d=new java.util.Date();
	    	out.println(d);
	    %>
	    
	</h1>
</center>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>ABC.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
---------
	http://localhost:2525/JspApp1/


Configuration of JSP program in web.xml file 
=============================================

Deployment Directory structure
----------------------------
JspApp1
|
|---Java Resources
|	
|---Web Content
	|
	|---ABC.jsp
	|
	|---WEB-INF
		|
		|----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.



Note:
-----
In order to see the output in JSP we need to replace ecj-4.4.2 jar file inside 
"Tomcat/lib" folder.

Download link: http://www.java2s.com/example/jar/e/download-ecj442jar-file.html

ABC.jsp
-------
<center>
	<h1>
		
		Current Date and Time : <br> 
	    
	    <%
	    	java.util.Date d=new java.util.Date();
	    	out.println(d);
	    %>
	    
	</h1>
</center>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>ABC</servlet-name>
  	<jsp-file>/ABC.jsp</jsp-file>
  </servlet>
  <servlet-mapping>
  	<servlet-name>ABC</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>

Request url
---------
	http://localhost:2525/JspApp1/test 
	http://localhost:2525/JspApp1/ABC.jsp 


How can we hide jsp file accessible by using file name? It means how can we access jsp 
file accessible by using URL Pattern
======================================================================================
In order to access jsp file accessible by using only url pattern we need to keep 
ABC.jsp file inside "WEB-INF" folder.
	

Deployment Directory structure
----------------------------
JspApp1
|
|---Java Resources
|	
|---Web Content
	|
	|
	|---WEB-INF
		|
		|---ABC.jsp	
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

We need to perform following changes inside web.xml file.

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>ABC</servlet-name>
  	<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
  </servlet>
  <servlet-mapping>
  	<servlet-name>ABC</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>


Request url
---------
	http://localhost:2525/JspApp1/test    ---> valid 
	http://localhost:2525/JspApp1/ABC.jsp  ---> invalid (404 Error)