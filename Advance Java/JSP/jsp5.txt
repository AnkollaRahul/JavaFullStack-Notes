2)Custom tags in JSP
====================
To create a custom tag in JSP we need to use taglib directory.

We can declare taglib directory as follow.
ex:
	<%@taglib  uri="uriofthetaglibrary"    prefix="prefixoftaglibrary" %>

	
Deployment Directory structure
------------------------------
JspApp9
|
|----Java Resources
|	|
	|------src
		|
		|--com.ihub.www
			|
			|----CubeNumber.java
|
|----Web Content
	|
	|------process.jsp
	|
	|------WEB-INF
		|
		|-----web.xml 
		|-----mytags.tld	
		|	
		|------lib
			|
			|---jsp-api.jar
Note:
-----
In above application we need to add "servlet-api.jar" and "jsp-api.jar" file in 
project build path.

Copy and paste "jsp-api.jar" file inside "WEB-INF/lib" folder sperately.


process.jsp
----------

<%@taglib uri="/WEB-INF/mytags.tld" prefix="ihub" %>

Cube of a given number is : <ihub:cube  number="5"/>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>process.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

mytags.tld
-------------
<?xml version="1.0" encoding="ISO-8859-1" ?>  
<!DOCTYPE taglib  
        PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"  
    "http://java.sun.com/j2ee/dtd/web-jsptaglibrary_1_2.dtd">  
  
<taglib>  
  
  <tlib-version>1.0</tlib-version>  
  <jsp-version>1.2</jsp-version>  
  <short-name>simple</short-name>  
  <uri>http://tomcat.apache.org/example-taglib</uri>  
  
  <tag>
  	<name>cube</name>
  	<tag-class>com.ihub.www.CubeNumber</tag-class>
  	<attribute>
  		<name>number</name>
  		<required>true</required>
  	</attribute>
  </tag>
  
  
 
</taglib>  

CubeNumber.java
----------------
package com.ihub.www;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.TagSupport;

public class CubeNumber extends TagSupport
{
	private int number;
	
	//setter method
	public void setNumber(int number)
	{
		this.number=number;
	}
	
	public int doStartTag()throws JspException
	{
		try
		{
			JspWriter out=pageContext.getOut();
			out.println(number*number*number);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
		return SKIP_BODY;
	}
}

Request url
-----------
	http://localhost:2525/JspApp9/


MVC in JSP
============
MVC stands for Model View Controller.

It is one of the design pattern which seperates business logic , persistence logic 
and data.

Controller is an interface between Model and View.

Controller will intercept all incoming request.

Model contains data and sometimes it contains business logic.

View contains presentation i.e UI.

Diagram: jsp5.1

	
Deployment Directory structure
------------------------------
MVCApp
|
|----Java Resources
|	|
	|------src
		|
		|--com.ihub.www
			|
			|----LoginBean.java
			|----LoginSrv.java
|
|----Web Content
	|
	|------form.html
	|------view.jsp
	|------error.jsp
	|
	|------WEB-INF
		|
		|-----web.xml	
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
---------

<form action="test">
	
	UserName: <input type="text" name="username"/> <br>
	
	Password: <input type="password" name="password"/> <br>
	
	<input type="submit" value="login"/>
	
</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>LoginSrv</servlet-name>
  	<servlet-class>com.ihub.www.LoginSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>LoginSrv</servlet-name>
  	<url-pattern>/test</url-pattern> 
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

LoginBean.java
---------------
package com.ihub.www;

public class LoginBean 
{
	private String username;
	private String password;
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	
}

LoginSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class LoginSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data
		String uname=req.getParameter("username");
		String pass=req.getParameter("password");
		
		//create login bean object and set the values
		LoginBean lb=new LoginBean();
		lb.setUsername(uname);
		lb.setPassword(pass);
		
		req.setAttribute("bean",lb);
		
		if(pass.equals("admin"))
		{
			RequestDispatcher rd=req.getRequestDispatcher("view.jsp");
			rd.forward(req, res);
		}
		else
		{
			RequestDispatcher rd=req.getRequestDispatcher("error.jsp");
			rd.forward(req, res);
		}
		
		pw.close();
	}
}

view.jsp
--------
<%@page import="com.ihub.www.LoginBean" %>
<%
	LoginBean lb=(LoginBean)request.getAttribute("bean");
%>
Details are :  <br>

<%= lb.getUsername() %> <br>
<%= lb.getPassword() %> <br>

error.jsp
---------
<b><i>
	<font color="red">Sorry! incorrect username or password</font>
</i></b>

<%@include file="form.html" %>

request url
-----------
	http://localhost:2525/MVCApp/